package com.firstwap.middleware.ejb.listener;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.ObjectMessage;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.firstwap.middleware.ejb.entity.SmsDispatcher;
import com.firstwap.middleware.ejb.service.DispatcherService;

@Component("dispatchErrorListener")
public class DispatchErrorListener implements MessageListener {

	private static final Logger logger = LoggerFactory.getLogger(DispatchErrorListener.class);
	
	@Autowired
	private DispatcherService dispatcherService;
	
	public void onMessage(Message message) {
		
		if (message == null) {
			
			logger.warn("Receiving null message from messaging infrastructure!");
			return;
		}
		
		ObjectMessage objectMessage = (ObjectMessage) message;
		
		try {
			
			SmsDispatcher smsDispatcher = (SmsDispatcher) objectMessage.getObject();
			dispatcherService.saveSmsDispacther(smsDispatcher);
			
		} catch (JMSException e) {
			
			logger.error(e.getMessage(), e);
		}
	}
	
}
